#!groovy
buildapplist = env.buildapps.split(" ")
def Changesetlist(){
    changesetlist=[]
    for (line in linelist){
	    changeappinfolist = line.split("\t")
		if(changeappinfolist.size()>1){
	    	changesetlist += changeappinfolist
        }
    }
    return changesetlist
}

def Changeapplist(n){
    changeapplist = []
    changesetlist=Changesetlist()
    for(i=0;i<changesetlist.size();i++){
		if(changesetlist[i][n] == "no"){
			changeapplist += changesetlist[i][0]
		}
	}
	return changeapplist
}

def Changeappsfile(n){
    filesetlist=[]
    changesetlist=Changesetlist()
    for(i=0;i<changesetlist.size();i++){
		if(changesetlist[i][0] in changeapplist){
			changesetlist[i][n] = "yes"
		}
		filesetlist[i] = changesetlist[i].join("\t")
	}
	filesetlist = filesetlist.join("\n")
	new File("/home/dami/jenkins_home/workspace/cbnpipeline/tmp.txt").write(filesetlist)
	sh "cp ../releasebuilds/${env.sysid}_${env.sysversion}/changeapps ./${env.sysversion}_changeapps_`date '+%Y%m%d'`_${env.BUILD_NUMBER}"
	sh "sudo chattr -i ../releasebuilds/${env.sysid}_${env.sysversion}/changeapps"
	sh "mv tmp.txt ../releasebuilds/${env.sysid}_${env.sysversion}/changeapps"
	sh "sudo chattr +i ../releasebuilds/${env.sysid}_${env.sysversion}/changeapps"
}

def MkPackage(){
    Properties props = new Properties()
    File propsFile = new File("/home/dami/jenkins_home/workspace/buildconfig/"+env.sysid+"_"+"common.properties")
    props.load(propsFile.newDataInputStream())
    sysversion=props.getProperty('sysversion')
    props.setProperty('oldversion', sysversion)
    vlist=sysversion.split('\\.')
    if(vlist[2].toInteger() < 9){
	    vlist[2]=vlist[2].toInteger()+1 
    }else{
        if(vlist[1].toInteger() < 9){
	        vlist[1]=vlist[1].toInteger()+1
  	        vlist[2]='0'
        }else{
  	        vlist[0]=vlist[0].toInteger()+1
            vlist[1]='0'
  	        vlist[2]='0'
        }
    }  
    sysversion=vlist[0]+'.'+ vlist[1]+'.'+vlist[2]
    props.setProperty('sysversion', sysversion)
    props.store(propsFile.newWriter(), null)
    sh "sudo chattr -R +i ../releasebuilds/${env.sysid}_${env.sysversion}"
}

node('master'){
	
	stage('Build'){
		if(HurryRelease == "no" && buildapplist.size()>1){
			if(buildapps == "all"){
				build job: "cbn_all"
			}else{
				for (buildapp in buildapplist){
					build job: "cbn_"+buildapp
				}
			}
		}else{
			echo "本次忽略Build"
		}
	}

	changefile = new File("/home/dami/jenkins_home/workspace/releasebuilds/"+env.sysid+"_"+env.sysversion+"/changeapps")
	linelist = new FileInputStream(changefile).readLines();
	stage('DeployToTestenv'){
		if(env.DeployToTest == "yes"){
			changeapplist=Changeapplist(1)	
			if(buildapplist == changeapplist){
				echo "以往build已全部更新到测试环境,只部署本次build模块"
			}else{
				for (changeapp in changeapplist){
					if(!(changeapp in buildapplist)){
						echo changeapp+"上次build完成后未部署,本次一块部署"
					}
				}
			}
			deployapplist=changeapplist.join(" ")
			if(deployapplist){
				build job: 'cbntestdeploy', parameters: [string(name: 'deployversion', value: env.sysid+"_"+env.sysversion), string(name: 'deployapps', value: deployapplist), string(name: 'jobname', value: 'all')]			
				Changeappsfile(1)
			}else{
				echo "获取deployapplist为空,没有部署任何应用"
			}
		}else{
			echo "本次不部署测试环境"
		}
    }
	
	stage('DeployToMoni'){
		appnotintestlist=[]
		if(HurryRelease == "yes" && buildapplist.size()>1){
			Changesetlist()
			for(i=0;i<changesetlist.size();i++){
				if(changesetlist[i][1] == "no" && changesetlist[i][0] in buildapplist){
					appnotintestlist += changesetlist[i][0]
				}
			}
		}else{
			appnotintestlist=Changeapplist(1)
		}
		changeapplist=Changeapplist(2)
		if(env.DeployToMoni == "yes" && !appnotintestlist){
			if(buildapplist == changeapplist){
				echo "以往build已全部更新到模拟盘环境,只部署本次build模块"
			}else{
				if(HurryRelease == "yes" && buildapplist.size()>1){
					changeapplist=buildapplist
				}else{
					changeapplist=changeapplist
				}
				withCredentials([usernamePassword(credentialsId: 'monislave',usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
					sh "sshpass -p ${PASSWORD} ssh ${USERNAME}@120.27.15.7 'mkdir -p /home/${USERNAME}/deploy/jenkins_home/workspace/releasebuilds/${env.sysid}_${env.sysversion}/'"
				}
				for (changeapp in changeapplist){
					if(!(changeapp in buildapplist)){
						echo changeapp+"上次build完成后未部署,本次一块部署模拟盘"
					}
					echo "上传"+changeapp+"到模拟环境部署服务器"
					withCredentials([usernamePassword(credentialsId: 'monislave',usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
						sh "sshpass -p ${PASSWORD} rsync -avz --delete ../releasebuilds/${env.sysid}_${env.sysversion}/${changeapp} -e ssh ${USERNAME}@120.27.15.7:/home/${USERNAME}/deploy/jenkins_home/workspace/releasebuilds/${env.sysid}_${env.sysversion}/"
						sh "sshpass -p ${PASSWORD} rsync -avz --delete ../releasebuilds/${env.sysid}_${env.sysversion}_config/${changeapp} -e ssh ${USERNAME}@120.27.15.7:/home/${USERNAME}/deploy/jenkins_home/workspace/releasebuilds/${env.sysid}_${env.sysversion}_config/"
					}
				}
			}
			deployapplist=changeapplist.join(" ")
			if(deployapplist){
				build job: 'cbnmonideploy', parameters: [string(name: 'deployversion', value: env.sysid+"_"+env.sysversion), string(name: 'deployapps', value: deployapplist), string(name: 'jobname', value: 'all')]			
				Changeappsfile(2)
				if(HurryRelease == "yes"){
					echo "本次为紧急更新，不更新版本号"
				}else{
					MkPackage()
				}
			}else{
				echo "获取deployapplist为空,模拟盘没有部署任何应用"
			}
		}else{
			if (env.DeployToMoni == "yes"){
				for(appnotintest in appnotintestlist){
					echo appnotintest+"没有部署测试环境，请先确认测试环境"
				}
			}else{
				echo "本次不部署模拟环境"
			}
		}
    }
	
	stage('DeployToPro'){
		appnotinmonilist=[]
		if(HurryRelease == "yes" && buildapplist.size()>1){
			Changesetlist()
			for(i=0;i<changesetlist.size();i++){
				if(changesetlist[i][2] == "no" && changesetlist[i][0] in buildapplist){
					appnotinmonilist += changesetlist[i][0]
				}
			}
		}else{
			appnotinmonilist=Changeapplist(2)
		}
		changeapplist=Changeapplist(3)
		if(env.DeployToPro == "yes" && !appnotinmonilist){
			if(buildapplist == changeapplist){
				echo "以往build已全部更新到实盘环境,只部署本次build模块"
			}else{
				if(HurryRelease == "yes" && buildapplist.size()>1){
					changeapplist=buildapplist
				}else{
					changeapplist=changeapplist
				}
				withCredentials([usernamePassword(credentialsId: 'pro',usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
					sh "sshpass -p ${PASSWORD} ssh -p 18001 ${USERNAME}@47.90.123.2 'mkdir -p /home/${USERNAME}/jenkins_home/workspace/releasebuilds/${sysid}_${env.sysversion}/'"
				}
				for (changeapp in changeapplist){
					if(!(changeapp in buildapplist)){
						echo changeapp+"上次build完成后未部署,本次一块部署实盘"
					}
					echo "上传"+changeapp+"到实盘环境部署服务器"
					withCredentials([usernamePassword(credentialsId: 'pro',usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
						sh "sshpass -p ${PASSWORD} rsync -avz --delete ../releasebuilds/${env.sysid}_${env.sysversion}/${changeapp} -e 'ssh -p 18001' ${USERNAME}@47.90.123.2:/home/${USERNAME}/jenkins_home/workspace/releasebuilds/${sysid}_${env.sysversion}/"
						sh "sshpass -p ${PASSWORD} rsync -avz --delete ../releasebuilds/${env.sysid}_${env.sysversion}_config/${changeapp} -e 'ssh -p 18001' ${USERNAME}@47.90.123.2:/home/${USERNAME}/jenkins_home/workspace/releasebuilds/${sysid}_${env.sysversion}_config/"
					}
				}
			}
			deployapplist=changeapplist.join(" ")
			if(deployapplist){
				build job: 'cbnprodeploy', parameters: [string(name: 'deployversion', value: env.sysid+"_"+env.sysversion), string(name: 'deployapps', value: deployapplist), string(name: 'jobname', value: 'all')]
				Changeappsfile(3)
			}else{
				echo "获取deployapplist为空,实盘没有部署任何应用"
			}
		}else{
			if (env.DeployToPro == "yes"){
				for(appnotintest in appnotinmonilist){
					echo appnotintest+"没有部署模拟盘环境，请先确认模拟盘环境"
				}
			}else{
				echo "本次不部署实盘环境"
			}
		}
    }
}